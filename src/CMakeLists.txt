include_directories(include)

ADD_LIBRARY(scene SHARED Scene.cpp)
SET_TARGET_PROPERTIES(scene PROPERTIES LIBRARY_OUTPUT_DIRECTORY "${COMMON_LIBRARY_OUTPUT_DIRECTORY}")
install_targets(/lib scene)

ADD_LIBRARY(scene_manager STATIC SceneManager.cpp)
SET_TARGET_PROPERTIES(scene_manager PROPERTIES LIBRARY_OUTPUT_DIRECTORY "${COMMON_LIBRARY_OUTPUT_DIRECTORY}")
install_targets(/lib scene_manager)

ADD_LIBRARY(texture STATIC Texture.cpp)
SET_TARGET_PROPERTIES(texture PROPERTIES LIBRARY_OUTPUT_DIRECTORY "${COMMON_LIBRARY_OUTPUT_DIRECTORY}")
install_targets(/lib texture)

ADD_LIBRARY(texture_manager STATIC TextureManager.cpp)
SET_TARGET_PROPERTIES(texture_manager PROPERTIES LIBRARY_OUTPUT_DIRECTORY "${COMMON_LIBRARY_OUTPUT_DIRECTORY}")
install_targets(/lib texture_manager)

ADD_LIBRARY(game STATIC Game.cpp)
SET_TARGET_PROPERTIES(game PROPERTIES LIBRARY_OUTPUT_DIRECTORY "${COMMON_LIBRARY_OUTPUT_DIRECTORY}")
install_targets(/lib game)

add_executable(main main.cpp)
SET_TARGET_PROPERTIES(main PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${COMMON_RUNTIME_OUTPUT_DIRECTORY}")

TARGET_LINK_LIBRARIES(main game)
TARGET_LINK_LIBRARIES(main scene_manager)
TARGET_LINK_LIBRARIES(main texture_manager)
TARGET_LINK_LIBRARIES(main scene)
TARGET_LINK_LIBRARIES(main texture)
TARGET_LINK_LIBRARIES(main glut)
TARGET_LINK_LIBRARIES(main GLU)
TARGET_LINK_LIBRARIES(main corona)

install_programs(/bin FILES main)
